#include <iostream>
using namespace std;
void SelectionSort(int *ar, const int n);
void swap(int &a,int &b);

int main(){
	int array[] = {17, 23, 9, 14, 21, 18, 5, 20, 11, 7, 13, 15};
	int val = sizeof(array) / sizeof(int);
	int a = 0;
	
	cout << "숫자들의 갯수 : " << val << "개" << endl;
	for(a=0 ; a<val ; a++)cout << array[a] << " ";
	cout << endl;
	
	SelectionSort(array,val);
	for(a=0 ; a<val ; a++)cout << array[a] << " ";
	cout << endl;
	
	return 0;
} 

void SelectionSort(int *ar, const int n){
	int a, b, c;
	
	for(a=0 ; a<n ; a++){
		b = a;
		for(c = a+1 ; c<n ; c++)if(ar[c] < ar[b])b = c;
		swap(ar[a],ar[b]);
	}
}

void swap(int &a, int &b){
	int swap;
	
	swap = a;
	a = b;
	b = swap;
}

SelectionSort() 설명 :
a : 바꿀 차례의 번호. 첫번째 값부터 시작한다.
b : a의 값을 받아 c와 비교하고 자리를 바꾸는 번호
c : a와 비교할 번호. a의 다음 번호부터 시작한다.



첫번째 for문에서는 배열 전체를 비교의 범위로 잡는다.
두번째 for문에서는 a의 다음 번호부터 범위로 잡고,
b는 a와 c중 더 작은 값의 배열 번호를 받는다.

두번째 for문에서 만일 지금 차례(b)보다
다음 번호(c)가 더 작으면 b는 c를 받고,
a는 c에 해당하는 값을 받은 b와 서로 바뀌게 된다.
그러나 다음 번호가 더 크면 b는 그대로 a의 값이 유지되어
a와 b가 서로 같은 값을 바꾸는 무의미한 작업을 한다.

그렇게 a가 한 차례를 진행할 때마다 a 다음부터 끝까지의 모든
수들과 비교를 해서 더 작은 수는 a의 자리로 간다. 이렇게 하여
a는 항상 남은 수들 중 가장 작은 값으로 채워진다.